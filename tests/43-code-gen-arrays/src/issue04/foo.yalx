package issue04

@yalx.Compiler(nativeHandle=true)
fun issue1() -> @int[]{1,2,3,4}

@yalx.Compiler(nativeHandle=true)
fun issue2() -> @string[]{"hello", "world", "!"}

@yalx.Compiler(nativeHandle=true)
fun issue3() -> @int[][]{{1,2},{3,4},{5,6}}

@yalx.Compiler(nativeHandle=true)
fun issue4() -> @int[10][8](996)

@yalx.Compiler(nativeHandle=true)
fun issue5(): int, int, int {
    val ar = @int[] {1,2,3,4,5,6,7}
    return ar[1], ar[3], ar[5]
}

@yalx.Compiler(nativeHandle=true)
fun issue6(): Foo[] {
    val a = @Foo[10](Foo(0, ""))
    a[1] = Foo(1, "ok")
    return a
}

@yalx.Compiler(nativeHandle=true)
fun issue7() -> @Foo[]{Foo(996, "hello"), Foo(700, "ok")}

@yalx.Compiler(nativeHandle=true)
fun issue8() -> @int[,]{{1,2},{3,4},{5,6}}

@yalx.Compiler(nativeHandle=true)
fun issue9() -> @u8[,]{{9u8, 8u8, 7u8}}

@yalx.Compiler(nativeHandle=true)
fun issue10() -> @f32[,]{{1.1, 1.2}, {1.3, 1.4}}

@yalx.Compiler(nativeHandle=true)
fun issue11() -> @i16[4,4,4](99i16)

@yalx.Compiler(nativeHandle=true)
fun issue12(): string, string, string {
    val ar = @string[,] {
        {
            "a", "b"
        }, {
            "c", "d"
        }
    }
    return ar[0,0], ar[0,1], ar[1,1]
}

@yalx.Compiler(nativeHandle=true)
fun issue13(): int[,] {
    val ar = @int[4,4](0)
    ar[0,0] = 1
    ar[1,1] = 2
    ar[3,3] = 3
    return ar
}

struct Foo(val i: int, val name: string)