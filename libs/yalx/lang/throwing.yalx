package lang

@Lang
class Throwable(
    val message: string,
    val linked: Throwable?
) {
    private val backtrace = unwind()

    override fun toString() -> message

    native fun printBacktrace(): unit
}

@Lang
class Exception(message: string, linked: Exception?) : Throwable(message, linked)

@Lang
class BadCastingException(message: string): Exception(message, none)

@Lang
class ArrayIndexOutOfBoundsException(message: string): Exception(message, none)

class BacktraceFrame(
    val address: u64,
    val function: string,
    val file: string,
    val line: u32
)

native fun unwind(): BacktraceFrame[]